//SPDX-License-Identifier:MIT
pragma solidity ^0.8.0;

contract Staking {
    mapping(address => uint256) public balances;
    uint256 public totalSupply;
    uint256 public annualInterestRate;

    constructor(uint256 _annualInterestRate)  {
        annualInterestRate = _annualInterestRate;
    }

    function deposit() public payable {
        require(msg.value > 0, "Deposit amount must be greater than 0");
        balances[msg.sender] += msg.value;
        totalSupply += msg.value;
    }

    function withdraw(uint256 _amount) public {
        require(balances[msg.sender] >= _amount, "Insufficient balance");
        require(_amount > 0, "Withdraw amount must be greater than 0");
        balances[msg.sender] -= _amount;
        totalSupply -= _amount;
       payable (msg.sender).transfer(_amount);
    }

    function compound() public {
        uint256 interest = (balances[msg.sender] * annualInterestRate) / 100;
        balances[msg.sender] += interest;
        totalSupply += interest;
    }
}
